on:
  push:
    branches: ["main"]

name: Main CI

jobs:
  build:
    name: Build project
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: make
      - uses: actions/upload-artifact@v3
        with:
          name: bootloader
          path: ./bootloader

  # test:
  #   needs: build
  #   name: Test
  #   runs-on: self-hosted
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: make test

  qemu_tftp:
    needs: build
    runs-on: [self-hosted, qemu]
    steps:
      - uses: actions/checkout@v3
      - run: |
          BSP=qemu_tftp make
          timeout 5m .github/workflows/qemu_test.sh

  vf2_tftp:
    needs: qemu_tftp
    runs-on: [self-hosted, vf2]
    steps:
      - uses: actions/checkout@v3
      - run: |
          BSP=visionfive make
          rm /tftpboot/boot/*
          mv bootloader /tftpboot/boot
          cp tftp/{Image-vf2.gz,rootfs.cpio.gz,jh7110-visionfive-v2.dtb,boot.scr,mkimage.sh,power_vf2.sh,vf2_tftp.py} /tftpboot/boot
          cd /tftpboot/boot
          mv Image-vf2.gz Image.gz
          gzip --decompress Image.gz
          gzip --decompress rootfs.cpio.gz
          chmod +x *.sh
          ./mkimage.sh
          ./power_vf2.sh off && ./power_vf2.sh on
          timeout 5m python3 vf2_tftp.py
          ./power_vf2.sh off

  # hyperfine:
  #   needs: vf2_tftp
  #   runs-on: [self-hosted, vf2]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         wget https://github.com/sharkdp/hyperfine/releases/download/v1.18.0/hyperfine-v1.18.0-aarch64-unknown-linux-gnu.tar.gz
  #         tar xvf hyperfine-v1.18.0-aarch64-unknown-linux-gnu.tar.gz
  #         BSP=qemu_tftp make
  #         hyperfine-v1.18.0-aarch64-unknown-linux-gnu/hyperfine --warmup 1 --show-output .github/workflows/qemu_test.sh

  clippy:
    needs: vf2_tftp
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: make clippy

  Doc:
    needs: vf2_tftp
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: make doc
      - run: tar -zcvf doc.tar.gz target/riscv64gc-unknown-none-elf/doc/
      - uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./doc.tar.gz

  Geiger:
    needs: vf2_tftp
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: |
          make geiger || true
          cat .github/workflows/geiger.md >> $GITHUB_STEP_SUMMARY
